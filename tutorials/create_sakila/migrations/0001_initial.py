# Generated by Django 3.1.5 on 2021-01-11 02:19

from django.db import migrations, models
import django.db.models.deletion
import django_mysql.models
import utils.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Actor',
            fields=[
                ('actor_id', models.SmallAutoField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=45)),
                ('last_name', models.CharField(max_length=45)),
                ('last_update', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '演员表',
                'verbose_name_plural': '演员表',
                'db_table': 'actor',
            },
            bases=(models.Model, utils.models.ModelSerializationMixin),
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('address_id', models.SmallAutoField(primary_key=True, serialize=False)),
                ('address', models.CharField(max_length=50)),
                ('address2', models.CharField(max_length=50)),
                ('district', models.CharField(max_length=20)),
                ('postal_code', models.CharField(max_length=10)),
                ('phone', models.CharField(max_length=20)),
                ('last_update', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '地址表',
                'verbose_name_plural': '地址表',
                'db_table': 'address',
            },
            bases=(models.Model, utils.models.ModelSerializationMixin),
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('category_id', models.SmallAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=25)),
                ('last_update', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '栏目',
                'verbose_name_plural': '栏目',
                'db_table': 'category',
            },
            bases=(models.Model, utils.models.ModelSerializationMixin),
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('country_id', models.SmallAutoField(primary_key=True, serialize=False)),
                ('country', models.CharField(max_length=50)),
                ('last_update', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '国家表',
                'verbose_name_plural': '国家表',
                'db_table': 'country',
            },
            bases=(models.Model, utils.models.ModelSerializationMixin),
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('customer_id', models.SmallAutoField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=45)),
                ('last_name', models.CharField(max_length=45)),
                ('email', models.CharField(default=None, max_length=50, null=True)),
                ('active', models.BooleanField(default=True)),
                ('create_date', models.DateTimeField(verbose_name='创建时间')),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='create_sakila.address', verbose_name='客户住址')),
            ],
            options={
                'verbose_name': '客户表',
                'verbose_name_plural': '客户表',
                'db_table': 'customer',
            },
            bases=(models.Model, utils.models.ModelSerializationMixin),
        ),
        migrations.CreateModel(
            name='Film',
            fields=[
                ('film_id', models.SmallAutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=128)),
                ('description', models.TextField(default=None, null=True)),
                ('release_year', models.PositiveSmallIntegerField(choices=[(1901, 1901), (1902, 1902), (1903, 1903), (1904, 1904), (1905, 1905), (1906, 1906), (1907, 1907), (1908, 1908), (1909, 1909), (1910, 1910), (1911, 1911), (1912, 1912), (1913, 1913), (1914, 1914), (1915, 1915), (1916, 1916), (1917, 1917), (1918, 1918), (1919, 1919), (1920, 1920), (1921, 1921), (1922, 1922), (1923, 1923), (1924, 1924), (1925, 1925), (1926, 1926), (1927, 1927), (1928, 1928), (1929, 1929), (1930, 1930), (1931, 1931), (1932, 1932), (1933, 1933), (1934, 1934), (1935, 1935), (1936, 1936), (1937, 1937), (1938, 1938), (1939, 1939), (1940, 1940), (1941, 1941), (1942, 1942), (1943, 1943), (1944, 1944), (1945, 1945), (1946, 1946), (1947, 1947), (1948, 1948), (1949, 1949), (1950, 1950), (1951, 1951), (1952, 1952), (1953, 1953), (1954, 1954), (1955, 1955), (1956, 1956), (1957, 1957), (1958, 1958), (1959, 1959), (1960, 1960), (1961, 1961), (1962, 1962), (1963, 1963), (1964, 1964), (1965, 1965), (1966, 1966), (1967, 1967), (1968, 1968), (1969, 1969), (1970, 1970), (1971, 1971), (1972, 1972), (1973, 1973), (1974, 1974), (1975, 1975), (1976, 1976), (1977, 1977), (1978, 1978), (1979, 1979), (1980, 1980), (1981, 1981), (1982, 1982), (1983, 1983), (1984, 1984), (1985, 1985), (1986, 1986), (1987, 1987), (1988, 1988), (1989, 1989), (1990, 1990), (1991, 1991), (1992, 1992), (1993, 1993), (1994, 1994), (1995, 1995), (1996, 1996), (1997, 1997), (1998, 1998), (1999, 1999), (2000, 2000), (2001, 2001), (2002, 2002), (2003, 2003), (2004, 2004), (2005, 2005), (2006, 2006), (2007, 2007), (2008, 2008), (2009, 2009), (2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020), (2021, 2021), (2022, 2022), (2023, 2023), (2024, 2024), (2025, 2025), (2026, 2026), (2027, 2027), (2028, 2028), (2029, 2029), (2030, 2030), (2031, 2031), (2032, 2032), (2033, 2033), (2034, 2034), (2035, 2035), (2036, 2036), (2037, 2037), (2038, 2038), (2039, 2039), (2040, 2040), (2041, 2041), (2042, 2042), (2043, 2043), (2044, 2044), (2045, 2045), (2046, 2046), (2047, 2047), (2048, 2048), (2049, 2049), (2050, 2050), (2051, 2051), (2052, 2052), (2053, 2053), (2054, 2054), (2055, 2055), (2056, 2056), (2057, 2057), (2058, 2058), (2059, 2059), (2060, 2060), (2061, 2061), (2062, 2062), (2063, 2063), (2064, 2064), (2065, 2065), (2066, 2066), (2067, 2067), (2068, 2068), (2069, 2069), (2070, 2070), (2071, 2071), (2072, 2072), (2073, 2073), (2074, 2074), (2075, 2075), (2076, 2076), (2077, 2077), (2078, 2078), (2079, 2079), (2080, 2080), (2081, 2081), (2082, 2082), (2083, 2083), (2084, 2084), (2085, 2085), (2086, 2086), (2087, 2087), (2088, 2088), (2089, 2089), (2090, 2090), (2091, 2091), (2092, 2092), (2093, 2093), (2094, 2094), (2095, 2095), (2096, 2096), (2097, 2097), (2098, 2098), (2099, 2099), (2100, 2100), (2101, 2101), (2102, 2102), (2103, 2103), (2104, 2104), (2105, 2105), (2106, 2106), (2107, 2107), (2108, 2108), (2109, 2109), (2110, 2110), (2111, 2111), (2112, 2112), (2113, 2113), (2114, 2114), (2115, 2115), (2116, 2116), (2117, 2117), (2118, 2118), (2119, 2119), (2120, 2120), (2121, 2121), (2122, 2122), (2123, 2123), (2124, 2124), (2125, 2125), (2126, 2126), (2127, 2127), (2128, 2128), (2129, 2129), (2130, 2130), (2131, 2131), (2132, 2132), (2133, 2133), (2134, 2134), (2135, 2135), (2136, 2136), (2137, 2137), (2138, 2138), (2139, 2139), (2140, 2140), (2141, 2141), (2142, 2142), (2143, 2143), (2144, 2144), (2145, 2145), (2146, 2146), (2147, 2147), (2148, 2148), (2149, 2149), (2150, 2150), (2151, 2151), (2152, 2152), (2153, 2153), (2154, 2154), (2155, 2155)], default=None, null=True)),
                ('rental_duration', models.PositiveSmallIntegerField(default=3)),
                ('rental_rate', models.DecimalField(decimal_places=2, default='4.99', max_digits=4)),
                ('length', models.PositiveSmallIntegerField(default=None, null=True)),
                ('replacement_cost', models.DecimalField(decimal_places=2, default='19.99', max_digits=5)),
                ('rating', models.CharField(choices=[('G', 'G'), ('R', 'R'), ('PG', 'PG'), ('PG-13', 'PG_13'), ('NC-17', 'NC_17')], default='G', max_length=5)),
                ('special_features', django_mysql.models.SetCharField(models.CharField(max_length=20), choices=[('Trailers', 'Trailers'), ('Commentaries', 'Commentaries'), ('Deleted Scenes', 'Deleted_Scenes'), ('Behind the Scenes', 'Behind_the_Scenes')], default=None, max_length=83, null=True, size=4, verbose_name='特殊功能')),
                ('last_update', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '电影表',
                'verbose_name_plural': '电影表',
                'db_table': 'film',
            },
            bases=(models.Model, utils.models.ModelSerializationMixin),
        ),
        migrations.CreateModel(
            name='FilmText',
            fields=[
                ('film_id', models.SmallAutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('last_update', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '电影详情表',
                'verbose_name_plural': '电影详情表',
                'db_table': 'film_text',
            },
            bases=(models.Model, utils.models.ModelSerializationMixin),
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('inventory', models.AutoField(primary_key=True, serialize=False)),
                ('last_update', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '库存表',
                'verbose_name_plural': '库存表',
                'db_table': 'inventory',
            },
            bases=(models.Model, utils.models.ModelSerializationMixin),
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('language_id', models.SmallAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=20)),
                ('last_update', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '语言种类',
                'verbose_name_plural': '语言种类',
                'db_table': 'language',
            },
            bases=(models.Model, utils.models.ModelSerializationMixin),
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('staff_id', models.SmallAutoField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=45)),
                ('last_name', models.CharField(max_length=45)),
                ('email', models.CharField(default=None, max_length=50, null=True)),
                ('username', models.CharField(max_length=16)),
                ('password', models.CharField(default=None, max_length=40, null=True)),
                ('picture', models.BinaryField(default=None, null=True, verbose_name='图片文件')),
                ('active', models.BooleanField(default=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='create_sakila.address')),
            ],
            options={
                'verbose_name': '员工表',
                'verbose_name_plural': '员工表',
                'db_table': 'staff',
            },
            bases=(models.Model, utils.models.ModelSerializationMixin),
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('store_id', models.SmallAutoField(primary_key=True, serialize=False)),
                ('city', models.CharField(max_length=50)),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='create_sakila.address')),
                ('manager_staff', models.OneToOneField(on_delete=django.db.models.deletion.RESTRICT, related_name='manager', to='create_sakila.staff', verbose_name='店长')),
            ],
            options={
                'verbose_name': '电影店表',
                'verbose_name_plural': '电影店表',
                'db_table': 'store',
            },
            bases=(models.Model, utils.models.ModelSerializationMixin),
        ),
        migrations.AddField(
            model_name='staff',
            name='store',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='create_sakila.store'),
        ),
        migrations.CreateModel(
            name='Rental',
            fields=[
                ('rental_id', models.SmallAutoField(primary_key=True, serialize=False)),
                ('rental_date', models.DateTimeField(verbose_name='出租时间')),
                ('return_date', models.DateTimeField(default=None, null=True, verbose_name='返还时间')),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='create_sakila.customer', verbose_name='客户')),
                ('inventory', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='create_sakila.inventory', verbose_name='库存')),
                ('staff', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='create_sakila.staff', verbose_name='员工')),
            ],
            options={
                'verbose_name': '出租表',
                'verbose_name_plural': '出租表',
                'db_table': 'rental',
            },
            bases=(models.Model, utils.models.ModelSerializationMixin),
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('payment_id', models.SmallAutoField(primary_key=True, serialize=False)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=5)),
                ('payment_date', models.DateTimeField(verbose_name='支付时间')),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='create_sakila.customer', verbose_name='客户')),
                ('rental', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='create_sakila.rental', verbose_name='出租')),
                ('staff', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='create_sakila.staff', verbose_name='员工')),
            ],
            options={
                'verbose_name': '付款表',
                'verbose_name_plural': '付款表',
                'db_table': 'payment',
            },
            bases=(models.Model, utils.models.ModelSerializationMixin),
        ),
        migrations.AddField(
            model_name='inventory',
            name='film',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='create_sakila.store'),
        ),
        migrations.AddField(
            model_name='inventory',
            name='store',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='create_sakila.film'),
        ),
        migrations.CreateModel(
            name='FilmCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='create_sakila.category', verbose_name='栏目')),
                ('film', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='create_sakila.film', verbose_name='电影')),
            ],
            options={
                'verbose_name': '电影栏目',
                'verbose_name_plural': '电影栏目',
                'db_table': 'film_category',
            },
            bases=(models.Model, utils.models.ModelSerializationMixin),
        ),
        migrations.CreateModel(
            name='FilmActor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('actor', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='create_sakila.actor', verbose_name='演员')),
                ('film', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='create_sakila.film', verbose_name='电影')),
            ],
            options={
                'verbose_name': '电影演员表',
                'verbose_name_plural': '电影演员表',
                'db_table': 'film_actor',
            },
            bases=(models.Model, utils.models.ModelSerializationMixin),
        ),
        migrations.AddField(
            model_name='film',
            name='actors',
            field=models.ManyToManyField(through='create_sakila.FilmActor', to='create_sakila.Actor', verbose_name='电影演员'),
        ),
        migrations.AddField(
            model_name='film',
            name='language',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='create_sakila.language'),
        ),
        migrations.AddField(
            model_name='film',
            name='original_language',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='original_film', to='create_sakila.language'),
        ),
        migrations.AddField(
            model_name='customer',
            name='store',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='create_sakila.store', verbose_name='电影店'),
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('city_id', models.SmallAutoField(primary_key=True, serialize=False)),
                ('city', models.CharField(max_length=50)),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='create_sakila.country')),
            ],
            options={
                'verbose_name': '城市表',
                'verbose_name_plural': '城市表',
                'db_table': 'city',
            },
            bases=(models.Model, utils.models.ModelSerializationMixin),
        ),
        migrations.AddField(
            model_name='category',
            name='films',
            field=models.ManyToManyField(through='create_sakila.FilmCategory', to='create_sakila.Film', verbose_name='电影栏目'),
        ),
        migrations.AddField(
            model_name='address',
            name='city',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='create_sakila.city'),
        ),
        migrations.AddIndex(
            model_name='actor',
            index=models.Index(fields=['last_name'], name='idx_actor_last_name'),
        ),
        migrations.AddConstraint(
            model_name='rental',
            constraint=models.UniqueConstraint(fields=('rental_date', 'inventory', 'customer'), name='film_rental'),
        ),
        migrations.AddIndex(
            model_name='inventory',
            index=models.Index(fields=['store', 'film'], name='idx_store_id_film_id'),
        ),
        migrations.AddConstraint(
            model_name='filmcategory',
            constraint=models.UniqueConstraint(fields=('category', 'film'), name='idx_category_film'),
        ),
        migrations.AddConstraint(
            model_name='filmactor',
            constraint=models.UniqueConstraint(fields=('actor', 'film'), name='idx_actor_film'),
        ),
        migrations.AddIndex(
            model_name='film',
            index=models.Index(fields=['title'], name='idx_title'),
        ),
        migrations.AddIndex(
            model_name='customer',
            index=models.Index(fields=['last_name'], name='idx_last_name'),
        ),
    ]
